{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Beispiele"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Einf√ºrhung in Machine Learning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Beispiel: Linear Regression as Exemplary `sklearn` Process\n",
    "\n",
    "Im Themenblock \"Data Understanding: Pair-wise und Multivariate Explorations\" haben wir schon ein einfaches Beispiel eines Supervised Learning Modells kennengelernt - die einfache lineare Regression. Wir gehen in diesem Beispiel nun den typischen Ablauf eines Machine Learning Prozesses in `sklearn` durch. Hierzu generieren wir uns folgende Daten."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rng = np.random.RandomState(42)\n",
    "X = 10 * rng.rand(50, 1)\n",
    "y = 2 * X + rng.randn(50, 1)\n",
    "plt.scatter(X, y);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Choose class of model\n",
    "\n",
    "# Choose Hyperparameters\n",
    "\n",
    "# Fit the model to data\n",
    "\n",
    "# Predict based on new data\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### L√∂sung"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1.9776566]]\n",
      "[0.09668927]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Choose class of model\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "# Choose Hyperparameters\n",
    "model = LinearRegression(fit_intercept=True)\n",
    "\n",
    "# Fit the model to data\n",
    "model.fit(X, y)\n",
    "print(model.coef_)\n",
    "print(model.intercept_) # Those parameters make sense, right?\n",
    "\n",
    "# Predict based on new data\n",
    "xfit = np.linspace(-1, 11)\n",
    "Xfit = xfit[:, np.newaxis] # Interesting - we usually solved this via .reshape(-1, 1)\n",
    "yfit = model.predict(Xfit)\n",
    "plt.scatter(X, y)\n",
    "plt.plot(xfit, yfit);"
   ]
  },
  {
   "attachments": {
    "458a207b-649f-4bd9-8819-5327b61bcaed.png": {
     "image/png": ""
    },
    "bb39a2b1-4454-45ca-8cd5-ed0b3012f87b.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Beispiel: Polynomiale Regression\n",
    "In diesem Beispiel schauen wir uns eine Polynomfunktion in Python n√§her an. Hierzu m√ºssen wir auf die `PolynomialFeatures` und die `LinearRegression` Klassen zugreifen, die wir in `sklearn` finden. Schauen wir uns den Docstring der `PolynomialFeatures`\n",
    "<div>\n",
    "    <img src=attachment:458a207b-649f-4bd9-8819-5327b61bcaed.png width=500>\n",
    "</div>\n",
    "\n",
    "und der `LinearRegression`\n",
    "\n",
    "<div>\n",
    "    <img src=attachment:bb39a2b1-4454-45ca-8cd5-ed0b3012f87b.png width=500>\n",
    "</div>\n",
    "\n",
    "an. Was m√ºssen wir wohl tun, um eine _polynomiale Regression_ durchzuf√ºhren?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "# Generate some cubic data\n",
    "def make_data(N=100, err=0.08):\n",
    "    X = 2 * np.random.rand(N, 1) - 1\n",
    "    y = X.ravel() ** 3\n",
    "    if err > 0:\n",
    "        y += err * rng.randn(N)\n",
    "    return X, y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Let's look at the polynomial features\n",
    "\n",
    "# [1, x, x^2]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Use them for linear regression fit\n",
    "\n",
    "# Generate fit curve\n",
    "\n",
    "# Plot\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### L√∂sung"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "# Generate some cubic data\n",
    "def make_data(N=100, err=0.08):\n",
    "    X = 2 * np.random.rand(N, 1) - 1\n",
    "    y = X.ravel() ** 3\n",
    "    if err > 0:\n",
    "        y += err * rng.randn(N)\n",
    "    return X, y\n",
    "\n",
    "# Data\n",
    "X, y = make_data(40)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1.00000000e+00 -7.13128410e-01  5.08552129e-01 -3.62662971e-01]\n",
      " [ 1.00000000e+00 -9.83396198e-01  9.67068082e-01 -9.51011074e-01]\n",
      " [ 1.00000000e+00 -4.05675395e-01  1.64572526e-01 -6.67630244e-02]\n",
      " [ 1.00000000e+00 -1.73069931e-01  2.99532010e-02 -5.18399842e-03]\n",
      " [ 1.00000000e+00  5.15892173e-02  2.66144734e-03  1.37301985e-04]\n",
      " [ 1.00000000e+00  5.49535685e-01  3.01989469e-01  1.65953990e-01]\n",
      " [ 1.00000000e+00  3.11158577e-02  9.68196601e-04  3.01262677e-05]\n",
      " [ 1.00000000e+00 -6.35683676e-01  4.04093736e-01 -2.56875791e-01]\n",
      " [ 1.00000000e+00  1.20067868e-01  1.44162929e-02  1.73093355e-03]\n",
      " [ 1.00000000e+00  1.70998849e-01  2.92406063e-02  5.00011002e-03]\n",
      " [ 1.00000000e+00 -2.76806972e-01  7.66220998e-02 -2.12095314e-02]\n",
      " [ 1.00000000e+00 -5.77605944e-01  3.33628627e-01 -1.92705878e-01]\n",
      " [ 1.00000000e+00  7.71018836e-01  5.94470045e-01  4.58347602e-01]\n",
      " [ 1.00000000e+00 -7.61037933e-02  5.79178735e-03 -4.40776987e-04]\n",
      " [ 1.00000000e+00 -6.08533105e-01  3.70312539e-01 -2.25347439e-01]\n",
      " [ 1.00000000e+00  3.13506935e-02  9.82865985e-04  3.08135303e-05]\n",
      " [ 1.00000000e+00 -5.47223573e-01  2.99453639e-01 -1.63868090e-01]\n",
      " [ 1.00000000e+00  3.82364606e-01  1.46202692e-01  5.59027347e-02]\n",
      " [ 1.00000000e+00 -5.18120061e-01  2.68448397e-01 -1.39088500e-01]\n",
      " [ 1.00000000e+00 -5.62170430e-01  3.16035593e-01 -1.77665865e-01]\n",
      " [ 1.00000000e+00  6.74671839e-01  4.55182090e-01  3.07098537e-01]\n",
      " [ 1.00000000e+00  3.77855879e-01  1.42775065e-01  5.39483977e-02]\n",
      " [ 1.00000000e+00 -1.40667784e-01  1.97874255e-02 -2.78345331e-03]\n",
      " [ 1.00000000e+00  8.46352927e-01  7.16313276e-01  6.06253838e-01]\n",
      " [ 1.00000000e+00 -5.55684590e-01  3.08785363e-01 -1.71587268e-01]\n",
      " [ 1.00000000e+00 -3.09989239e-01  9.60933282e-02 -2.97878977e-02]\n",
      " [ 1.00000000e+00  3.94599587e-01  1.55708834e-01  6.14426415e-02]\n",
      " [ 1.00000000e+00  5.93470944e-01  3.52207761e-01  2.09025072e-01]\n",
      " [ 1.00000000e+00 -4.03328272e-02  1.62673695e-03 -6.56109005e-05]\n",
      " [ 1.00000000e+00  3.73642036e-01  1.39608371e-01  5.21635558e-02]\n",
      " [ 1.00000000e+00  9.27569975e-01  8.60386059e-01  7.98068275e-01]\n",
      " [ 1.00000000e+00  4.72164722e-01  2.22939525e-01  1.05264179e-01]\n",
      " [ 1.00000000e+00 -7.40977235e-01  5.49047262e-01 -4.06831522e-01]\n",
      " [ 1.00000000e+00  4.65493197e-01  2.16683917e-01  1.00864889e-01]\n",
      " [ 1.00000000e+00 -3.49464051e-01  1.22125123e-01 -4.26783401e-02]\n",
      " [ 1.00000000e+00 -4.67179413e-01  2.18256604e-01 -1.01964992e-01]\n",
      " [ 1.00000000e+00 -8.44769867e-01  7.13636129e-01 -6.02858298e-01]\n",
      " [ 1.00000000e+00 -9.56188672e-02  9.14296777e-03 -8.74240221e-04]\n",
      " [ 1.00000000e+00  9.72061596e-01  9.44903747e-01  9.18504644e-01]\n",
      " [ 1.00000000e+00  6.52632533e-02  4.25929223e-03  2.77975268e-04]]\n"
     ]
    }
   ],
   "source": [
    "# Let's look at the polynomial features\n",
    "poly_features = PolynomialFeatures(3).fit_transform(X)\n",
    "\n",
    "# [1, x, x^2]\n",
    "print(poly_features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Use them for linear regression fit\n",
    "model = LinearRegression().fit(poly_features, y)\n",
    "\n",
    "# Generate fit curve\n",
    "X_fit = np.linspace(-1, 1, 1000)[:, None]\n",
    "poly_features_fit = PolynomialFeatures(3).fit_transform(X_fit)\n",
    "y_fit = model.predict(poly_features_fit)\n",
    "\n",
    "# Plot\n",
    "plt.scatter(X, y)\n",
    "plt.plot(X_fit, y_fit, color='gray');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# The above: using pipeline\n",
    "from sklearn.pipeline import make_pipeline\n",
    "\n",
    "def PolynomialRegression(degree=2, **kwargs):\n",
    "    return make_pipeline(PolynomialFeatures(degree),\n",
    "                         LinearRegression(**kwargs))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXwAAAD4CAYAAADvsV2wAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAgAElEQVR4nO3dd3hUVf7H8feZlmTSJ6QRSKEKSxOQgLqK62LdtXfsq4htsaw1dhfXn20XK6KyFmJbFSu7iq6uWOiCdEQSkgDpPZNMPb8/JkZKQgKZEjLf1/PkyUzmzj1nhuGTk3PP/V6ltUYIIUTvZwh1B4QQQgSHBL4QQoQJCXwhhAgTEvhCCBEmJPCFECJMmELdgX3p06ePzs7ODnU3hBDioLFixYpKrXVye4/16MDPzs5m+fLloe6GEEIcNJRS2zp6TKZ0hBAiTEjgCyFEmJDAF0KIMCGBL4QQYUICXwghwoQEvhBChAkJfCGECBMS+EII0YMsKllE/oZ8XB6X3/ctgS+EED3InB/n8PqG1zEajH7ft18CXyk1VylVrpRa28Hjk5VSdUqpVa1f9/ijXSGE6E3WVa5jVcUqLhh2AQbl//G4v0orvAw8Dby6j20Waa3/4Kf2hBCi13l94+tYTVZOHXhqQPbvl18hWuuvgWp/7EsIIcJRZXMl/y74N6cNOo0YS0xA2gjmHP4kpdRqpdS/lVK/6WgjpdQ0pdRypdTyioqKIHZPCCFC51+b/oXL6+L8Q84PWBvBCvyVQJbWejTwFPB+RxtqredorcdrrccnJ7db4VMIIXqVFncLb256k6P7HU12fHbA2glK4Gut67XWja23FwBmpVSfYLQthBA93cdbP6a6pZpLfnNJQNsJSuArpdKUUqr19oTWdquC0bYQQvRkXu3l1fWvMsw2jPGp46FsHWz7PiBt+WWVjlLqDWAy0EcpVQLcC5gBtNazgbOAq5VSbqAZOE9rrf3RthBCHMy+2f4NBXUFPPzbh1FKwWd3wc7VcOM6MEf5tS2/BL7Wep9HGbTWT+NbtimEEGIXr6x7hVRrKsdlHweF38LP/4UpD/o97EHOtBVCiJDZULWBpaVLmTpsKmZlgs/vhdi+MOHKgLQngS+EECHy6vpXsZqsnDnkTNi0AEqWweTbAzK6Bwl8IYQIidKmUv5T8B/OGHwGcaZo+OIBSBoMY6YGrE1/lVYQQgixH15e9zIAFw+/GFa/CRUb4ZxXwRi4WJYRvhBCBFlVcxXvbn6XPwz8A+kRifDV36DvWBh2SkDblRG+EEIEWf6GfBweB5ePuByWvwR1xXDqM+A7XSlgZIQvhBBB1OBs4I2NbzAlawo5EUnw9WMw8Hcw4OiAty2BL4QQQfTWprdodDVyxcgr4NtZ0FwNxwbnEiES+EIIESTN7mZeW/8aR2YcyTBjDHz/NIw8B/oeGpT2JfCFECJI5v80n+qWaq4ceaVvGSYEbXQPEvhCCBEUTo+TuWvnMjZlLGNdGta8DZOug4T+QeuDBL4QQgTBuz+9S5m9jKtHT4dP74CYVDjyxqD2QZZlCiFEgDk8Dl788UXGpY4jt2oHFC+BU56CiMBcyrAjMsIXQogAe2fzO5Q3l3PtiCtRX9wHqSMCWkKhIzLCF0KIAGpxt/Dimhc5LO0wDitcCrVFcPEHYDAGvS8ywhdCiAB6e9PbVDZXcs3gc30nWQ05EQZMDklfJPCFECJA7C47L619idz0XMavfBs8LjjhbyHrjwS+EEIEyBsb36C6pZprU46Ete/AkTeALSdk/ZHAF0KIAKhz1PHS2pc4KuNIDv3ueYjPhCNuCGmfJPCFECIAXlrzEo3ORmaY+kL5et9UjsUa0j5J4AshhJ+VNpWSvyGfP2b+niHfz4FBv4dDTg51tyTwhRDC355d9SwazbVVVeBugRMfCXit+66QwBdCCD/aUrOFD37+gPPSf0vfte/D4ddD0sBQdwuQwBdCCL+a9cMsrKYortzwP0jMgaNuCXWX2kjgCyGEnywrXcZXxV9xWVQOiVUF8Ie/gzkq1N1q45fAV0rNVUqVK6XWdvC4Uko9qZTaopT6USk11h/tCiFET+Hxenhk2SOkRSZx8drPYPT5MPCYUHdrN/4a4b8MnLCPx08EBrd+TQOe81O7QgjRI7y/5X02Vm/kpkY3kZY4OG5mqLu0F78Evtb6a6B6H5ucCryqfRYDCUqpdH+0LYQQodbobOTJH55kTFQ6JxSv8a25j04Kdbf2EqxqmRlA8S73S1p/tnPPDZVS0/D9FUBmZmZQOieEEN0xZ80cqluqeaa8HjVgMow6N8Q9al+wDtq2twBVt7eh1nqO1nq81np8cnJygLslhBDdU1xfzLz18zhFxTHC6fQdqO0Ba+7bE6zALwF2vXBjP2BHkNoWQoiAeXT5oxg8HmZs28D1H1aTPfZ35Ofnh7pb7QrWlM6HwHVKqTeBXKBOa73XdI4QQvRkjp9/pu7Dj2jZuAFDlJXto9JYpP/LFdW1rNvi4JmlTjTbmDZtGgBTpwb/qlb7orRud2Zl/3ai1BvAZKAPUAbcC5gBtNazlVIKeBrfSh47cJnWenln+x0/frxevrzTzYQQIqC8Tifl//cINW+8AUoRMWgQ7ro6PKWllCRrxhxaxoTX6iis/TVPs7KyKCwsDHpflVIrtNbj23vMLyN8rfX5nTyugWv90ZYQQgSTu6aG4qum0/LjjyRecAF9rrsWk83GkytmsfrdOdz8kZutC5Ooa2gAPG3PKyoqCl2nOyBn2gohRAc8dXUUXf4nHBs3kvHkLNLuuRuTzUZBXQH/XPcyqf1c1I6oxeIx8nh6391Wp/TEVYYS+EII0Q7tdrP9xhtxbNlCv2ee4aOKCrKzszEYDJz8xElEeNzcVN9M2fF38WhtDROjo/ljXBwAVquVmTN73olXwTpoK4QQB5WyRx6h6bvvSZ/5Vz4o8h2ItdvtxE+KxzjAxA2V1WyKP4vTL70euymRjQ88yE3JKWxKTOTumTN73AFbkMAXQoi91H/6GTWvvkbixReRcOaZ5GVnY7fbMcYaybwwnREtDhzfVDP1hw8ovHoWUy+8EPvw4Wy7YCrf3Xsvth4Y9iBTOkIIsRtXWRml99xD5IgRpN7iK238ywHYzEv6YowyMm1rJdcvaNntwKx17FiiRo+met5raK83JH3vjAS+ECIs5efnt83JZ2dnk5+fj9aanXfm4XU66fvoIyizGfAdgI0dG0v0+Him1dRxx+v1NDj3PjBru+RiXNuKaPzf/0LxkjolUzpCiLCTn5/fNicPsG2bb47e9uOPZH/7Lal330VETk7b9nf/9W6eqX+MAQ4nxR+Us7jE0+6B2dgpUzDabNR98CGxx/Ss0sggI3whRBjKy8trC/tfmFtaSHz/A6JGjybx/N1PLSpMX43XauScTXU88o2LrKws5syZs9eBWWU2E3fC8TR+9RWexqaAv479JYEvhAg77Z0U9ZfkFKxA2gMPoAy/RuP/Cj7l/ZIvudTu5px7V+L2eCksLOxwFU7cySejW1po/PK/ger+AZPAF0KEnT3n3sdFRXFmQgLzPW4ihw5p+3mVvZJ7Ft3BEIeTa6Y8CXF9O9131KGHYkpLo/7TT/3e7+6SwBdChJ2ZM2ditVoBX+3221NSKXW7GXzXXW3baK25/z9X0OB18recM7AMPq5L+1YGAzFHH439+8VopzMQ3T9gEvhCiLAzdepU5syZQ1ZWFqfFx/ObyEiazzqTCy69tG2b+ctn8WXDz8wwJDPk2P07azb6yCPwNjVhX7XKzz3vHgl8IURYmjp1KlvXr+f/Ro4ictQoTnzoobbHisvX8PC6l5jg0lx0xttg2L+ojJ44EUwmmhZ94+9ud4sEvhAibFW9+BLuigpSb7+97UCty2nn9n9fikl7mTn5cQwx+3/lPWNsLNYxY2j8VgJfCCFCzlVaStXcucSddCLWsYe2/XzW++fxI07uzTmDtEHHH/D+rRMn4tiwEU9Dgz+66xcS+EKIsFT+xBPg9ZJ8081tP/vqy3t4pbmAc63ZHD/5wW7t3zpuLGhN86rV3e2q30jgCyHCTvOaNdR/+BG2Sy7B0i8DgJ2bPiav4F2GEcEtp77Z7TaiRo0CoxH7yhXd3pe/SOALIcKK1pqyvz2MMSmJpKt81551VW/llq9vxWMw8NiJ/yTCEt3tdgzR0UQOHUrzyh+6vS9/kcAXQoSVhk8/pXnlSpJn/BljTAw01/DEu2ey2mLkvkNvIjNlpN/aiho3jubVq9Eul9/22R0S+EKIsOF1OCh/9DEihgwh4cwzwe3gg7dOZ57FzYUZx3DC6Mv82l7UmNHolhYcW7b4db8HSgJfCBE2ql99Fdf27aTefhtKKda+dwkP6EpyY7K5+XdP+L29yOHDAWhZv97v+z4QEvhCiLDgrqqiavbzxEyeTPThh1O5MI8ZDavpY4nh0ZNfxWTwf7V4S1YWBquVlnU9I/ClHr4QIixUzHoSr8NByq234lwym5sL36E+0sprJ/yTxMjEgLSpDAYihg/rdITv9Wo2lTWwZGsVSwqqqWt28fqVE/3eHwl8IUSv17JxI7XvvIPtoguxNCzjjuWPsDImmkePfIhDkoYFtO3I4cOpfftfaI8HZTQC4PFqNuysZ3FrwC8rrKbW7juwm5EQxaSBSXi8GqNB+bUvEvhCiF6tbRlmbCx9pgzima/+wicJcVw/ajonDDw54O1HDh+Obmlh9XerWeyNZ8nWKpYX1tDgcAOQlWTluOGp5OYkkTvARr9Ea8D6IoEvhOjVGr/4AvuSJaRefS4ffX0zzyfFc3rOH7hyzDUBa9Pp9vJjSS1LCqr5eaObK4F/zP6Er/qPZUByNH8Y3ZeJA2zk5iSRFh8ZsH7syS+Br5Q6AZgFGIEXtdYP7/H4ZOADoKD1R+9prR/wR9tCCNERr9NJ2SOPYsnqy2bHXO5PiWdiyjjuPvIBlPLfdEmLy8Oq4lqWbK1mSUEVK4tqaHF5ARjex4bXYGRaJjxy57GkxAYv4PfU7cBXShmBZ4ApQAmwTCn1odZ6z6MUi7TWf+hue0II0VU1r83DVVSE5wQnM1LiyY7P5oljn8JsMHdrv81ODyuLaliytYrFBdWsKq7F6faiFAxLi+P8CZnk5iQxIceGLdrCz19mE1dfFtKwB/+M8CcAW7TWWwGUUm8CpwI9Yx2SECIsuauqqHzmaVR/N9NHW0mMTmX2cS8Sa4nd7301OtwsL6xmSUE1Swuq+bGkFpdHY1AwIiOeSyZlkZuTxGHZNuKte/8yiRg4EMemTf54Wd3ij8DPAIp3uV8C5Laz3SSl1GpgB/AXrfW69namlJoGTIO9rzsphBBdVX7fbXib7Tx4fATmKBsvHP9PUqNTu/TcumZXW8Av2VrF2h31eLwak0Exsl88fzpyALkDbIzPSiQ2svO/FiIGDaLh88/xOhwYIiK6+9IOmD8Cv72JML3H/ZVAlta6USl1EvA+MLi9nWmt5wBzAMaPH7/nfoQQolP2j16ibuG3fDHRyLa+cbx8/Iv0j+vf4fY1TU6WFla3zcGv31mP1mAxGhjTP4Grjx5I7gAb47ISsVr2PzYjBg8Crxfn1q1EDgvsMtB98UfglwC7vpP98I3i22it63e5vUAp9axSqo/WutIP7QshBAD5+fl88cyt3OqJojrOxLwjzTw/5TkGJ+4+vqxsdLC0dfS+pKCajaW+i5REmAyMzUxkxrGDyc1J4tDMBCLNxm73K2LQIAAcW34+6AN/GTBYKZUDbAfOAy7YdQOlVBpQprXWSqkJ+Eo6VPmhbSGEAHxh/9Wsq7h7QDwtq8zMOQU2zypibdRa0v44tO0kpyVbq/i5ogmAKLOR8dmJ/GFUOrkDkhjVL54IU/cDfk+WrCwwmUJeRK3bga+1diulrgM+xbcsc67Wep1Sanrr47OBs4CrlVJuoBk4T2st0zVCCL8pfP1m7v9dJGWfxLJmAHy8qg+q3xTyvnOSt+YLAGIiTIzPTuSscf3JHWBjZEY8ZmPgS4opiwVLRgbObdsC3ta++GUdvtZ6AbBgj5/N3uX208DT/mhLCCF2pb0eGj7K46KJTr75No3BaJ4dfimxphF4Whqxl6xj5rlHkzvAxvD0OExBCPj2mLOzekfgCyFEsGit2VrZxNKCalZu2cGULQ+SaVrCC9UZXFHo5qnsQaz/6ltaip7HVVFIVlYmVx4V+vM8LZlZ2JctR2vt15O+9ocEvhCiR9Na81N5Y9tJTksLqqlocJBMDS9H/p2myBJmxPTjobec/OB1MvvTj9uWCVqtVmbOnBnS/v/CkpWFtttxV1RgTkkJSR8k8IUQPYrXq9lY2sCSgiqWbK1maWE11U1OANLiIjl8YBIn2MqZ8uNf+Uo1c1ufdPLmG7FiwXL91WQ+/jhFRUVkZmYyc+ZMpk6dGuJX5GPJygLAVVQkgS+ECE8er2b9jnqWFFSxeKuvVHBd86+lgicPTWZiayXJTJsVteEj9PyrmJtoY1Z0PBf+nMqwjUWk3nkHwy6+mLOuvz7Er6h9lmxf4Du3bcM6fnxI+iCBL4QIKpfHy9rtdW1LJHctFZydZOWE36SRO8DGhJw9SgV7XLDwbpzfPcX9mYP50Ojg3MgjOOWjxURNmEDihReG6BV1jTk9HcxmnIWhO3ArgS+ECCiH28OPJXVtJzmt2FaD3ekBYGByNH8c05fcnE5KBTeUwr8uo6pkMTcNHsVKdy3XDruS4x76L+6ISPo++gjK0LOv2KpMppAvzZTAF0L4VYvLww9FtW1z8CuLanC4faWCh6bGcta4fm2VJJNju1BXpmARvHM5q2jh5kHDqPM288hRj3Bo/kpqNm6i3+znMKd2rUZOqJmzMnEWF3e+YYBI4AshusXudLNy268Bv6q4Fqfn11LBF+TuXiq4y9xO+N/D6G/+zry0LJ6IiiYtIp55x/yd9EWb2DFvHrZLLiF28uSAvTZ/s2Rk0Lxqdcjal8AXQuyXhhYXK7bVtM3B/1hSh7v1+qsj+sZx6RHZ5ObYGJ9tIz7qAOvOV2yG966krmw1Dww+lM9clUzuN5mZR87EvKmIbXffgzU3l5S/3OzfFxdg5owMvHV1eBoaMMbuf5nm7pLAF0LsU12zi2UFviqSSwqqWbu9Dq8Gk0Exql88Vx41oC3gYyK6GSlaw/K58GkeS6OjyRs8gkpXLTeMvYHLRlyGt7KKguuvx9SnDxn/+DvK3L0LmQSbOSMDANeOHRiHDg16+xL4Qojd1DQ5faP31imaDaW7lwq+9phB5OYkMTYr4YBKBXeo6mf4+AacBV/zdM4oXqaOrMhEXpsymxF9RuBpbKRo2lV46uvJzp+HKTHRf20HSVvgb99OpAS+ECLYKhpaSwW3BvymssCWCt6Lxw3fPw1f/Y3VkVHcd8ihbHFUcc6Qc7h5/M1YzVa8Ticl116H46ef6P/ccyEtMdwdbYFfsj0k7UvgCxFmyupb2i0VbLUYGZeVyCmtyyRHBqhU8G62r4CPbqCxbA2zBozmLW8NKUYTzxz7DEf1OwoA7XSy4+absS9ZQt9HHyHmt0cGtk8BZExMREVF4dougS+ECICSGnvblZyWFFSzrcoOQGxrqeCzx/cnN8fGiCCVCgagoQy+uB+9Kp//2tJ5aPBvqHDVcP4h5/PnsX8m2hwNgNfpZPuMG2j88ktS77yT+D/+MTj9CxClFOaMvrh2SOALIbpJa01RtS/gF7dO0WyvbQYgPsrMYdk2Lprou+D28L5xGA1BrtrodsCS2fC/R9mk3Dw6dBxLnBUMik7hicOfZXTy6LZNvXY7JTNuoGnRItLuvYfE888Pbl8DxJyRgVNG+EKI/fVLqeC2EfzWakrrWwCwRVuYkG3jit/mkJuTxCFpsRiCHfC/8HpgzTvw1UNU1hXxdPYI5ut6YpWT2yfczjlDz8Fs+HXFjausnNXnnUfUjh3cV1bGsjvuYKbX22MKoXWHJSOD5h9WhaRtCXwhDiJer69U8NICX6ngJVurqWx0AJAcG+ErUTAgiYk5NgalxISs7nobrWHjx/DfmdRVbeS1voOYlzQQh7eRC4ZdwPTR04mPiN/tKc1r17H5ssugro5rd2znf01NUFfLtGnTAA760Delp+Otr8fb1IQhOjq4bQe1NSHEfvF6NRtK69tG8MsKa9pKBafHR3LkoCRyBySRm2Mjp0906AP+F14vbPoEFj1OfekqXkvL5uXMHFqUg7rFdRi/N9Lvpn7ET/g17LXWVL/yCuWPP0Gt08G0om1sdjjaHrfb7eTl5R30gW9OSwN8f8VEDMgJatsS+EL0IG6Pl/U7fw34pQXV1Lf4Kkn2S4zimKEp5A6wMTEnif62qP0K+Pz8fPLy8gJbK97thDVvw7ezKKv5mTdSMng7ZxANXgeNKxvZ+d5OHCW+EN91xO7avp2d991P06JFxPzudxwxZw41Hvdeuy8qKvJvf0PA1Fr3x11WKoEvRLAEJQA74fJ4WbO9ri3glxfW0LhLqeATR6STO8A3TZOREHXA7eTn5zNt2jTsdt8KnW3btvl3iqSxAla+AsteYp2jkldT+/NZbH+8Co7tfxTv3/Y+hUsLd3uK3W7n3rw8jm+yU/nss6AUqXffReIFFxC34BNq2qkqmZmZ2f2+hljbCL+0LOhtK61151uFyPjx4/Xy5ctD3Y1erycEX7DtGYDguxzenDlzAvra91UqeFBKTNscfG6OjdS4DkoFH4Ds7Gy2tROgSUlJVFZWHthOtYbipbDsRZo2fMB/Ik28l9yXH3EQbY7mjMFncMEhF9Avth8Gg4Fds8YMnBYfz1VJfehrNhM75fek3nEH5r59gdD9+wSD1+Fg0+gxJN8wgz7Tp/t9/0qpFVrrdq+wIoEf5nrzf6x96SgAs7KyKCws9Fs7LS4PK4tq2kbwPxTVtpUKPiQtti3gJ+TY6BPThVLBB2jPwN1VUlISs2bN6vq/d912WPM23tVvsqq+gPkJCXxqtdKMhwHxAzhryFmcPuh0YiwxbU/55f3uYzRyZnwC5yQkkG42s9HrZcrcucQcecRezfTmgcjmSYcTe/xxpN93n9/3LYEvOhSs4OtpOgpApRRer/eA92t3un2VJFsDfnVxXVup4OHpceS2XqpvQraNxP0pFdxNHf07/6LTX/ItdbDxE7yrX2f1jqV8Gm1lYVw85cqL1WTlhJwTOH3Q6az9bC133XXXbiF9zpQpfPF//0fJO+8yITISs1J839TEm/YmLpk1i6k9/EpVgbD19DMwp6TQ//nZft+3BL7oUKCCr6fbn190+xppNrS4WL5LwK/Zo1TwL9Mz3SoV7AfXXHMNzz333D632eu11++ATQv46asX+NmzjcUxUXwZGUW12YjFYObIjN9yXPZxHNP/GKxmK/n5+dw6fTrpHg8DLRGMiopkvDWazNaKli2JiXxUUc4/i4vR6em9asS+v4qnX42rtJQB78/3+773Ffhy0DbMZWZmtht8veHg2L7MnDmz3amsmTNn7rZdfn4+l19+OU6nbylkcWklV//1Wf69M5L6yNS2UsFmo2JUvwSmHTWA3AFJjMtKPOBSwV6HA3dZGe7KSjy1dXjq6vDW+7576up995ua0I4WvC0OdEsLXofvu3bvvbIF4PzSUs4YMBCn9uLUGqdX49Qal/Z9d2iNx+Vix3WX42kqpaZpBxWeBrZbTJSajbiNNoxezdFlDgzlHo4eNomh2TF4GxdSXvUGnsoqhhQU8HlGv7Y2a9xuVjY38ynw0IJPiBgyhEOV4p4Deld6F1NaKs2rgn/ylV8CXyl1AjALMAIvaq0f3uNx1fr4SYAduFRrvdIfbYvu6WrwdSZU860H2u4v23T23Bm35mHMHkdi/5FE9h+BOSUbpQwsKnWSO9jIdccMIndAEmMzE4my/FporKN+eRobcZeV4SotxV1ahru8DFdpGe7SUlxlZbjLyvDU1LTfaaUwxMVhjI/HEB2NISICFRmJMTYWFRmJITICTCZoZ6nm/156CSMKi/r1K9KgSIo0EBdlJCrCgMFgoHDpd3i1wuiFGK+F37hhpNuL0QtmpXBrMw5txL38B5q2l2KwWjElJREx7BDe/+EHSlxOtjqcbHU62Ol2o/H9tfhECEoB92TmtDQ8tbV4W1owRPrv4Hxnuj2lo5QyApuBKUAJsAw4X2u9fpdtTgKuxxf4ucAsrXVuZ/uWKZ0Ds78h2N2w3teBX+g8VA9UIA44VzQ42koULCmoYnNZIwBeVwuO7ZtwFK+hpXgtjh2b0G5n2/O01nhqa3GXlrLwzbd4+7nnSPR6STObSDWZSbNYyIqOxuh07tVmrdZY0tNJOeQQTGmpmNPSMKWmYUpOxhgfjzEhHmNcHIbY2AO+UPfQgVlEmUvJGRxFek4Elr6RVCVY+CnCQlPrPs1aMTIuizEZR3Bo34mMSR5DYlT7Nefbm/IL1+NBB6J2/vvsvOMOBv7n31iys/2674DO4SulJgH3aa2Pb71/B4DW+m+7bPM88JXW+o3W+5uAyVrrnfvatwT+/gvFqpt9Lflrbm7utC9e7aXeUU+No4YmV9NuX3aXnSZ3E80uO26Pk7XrfuSbJd/R0NQEJgUGUEYF2he6aIiJjuGcs8/BoHxBZlAGjMqIxWj59ctgIcIYQbNTUVztpLDCyc/lzZTWecBrItJkYVhaH758Zx4UbSa+rIQUD/TRBlIMJpKNJnLi4xiXnUOi1rjLy9F7hLlHayrcbsrcbkrdLpqjrEy743aWbNnCzNnPU9TUSLnbjVPrbv0bubwuGpwNVNkrqajZQnnVZirqCihvKKG0qZRiVwPFyotzlzo6EW4vcVUOWopbsJdHMPWP05lx/gwsxl8PJOfn53PRRRe1e4yno2Md4bji60A0ffcdRZf/iazXXsV62GF+3Xeg5/AzgF0vw16CbxTf2TYZwF6Br5SaBkyD3j+PHAh5eXm7/YeDwJ+S3tHZjzXVVaT3MTJkcBRx6Raiki2Yksy8U3gfX+bPpsrTQo12Uas9eLpwwqhJa8xakzjeTDLxmLTGqH0/14AX8KLQwHeb5/t+phQahRsNLjA5vVgcEOkEq1NjdUCsHTKbYYRdE9vsux/brImzwx3NYHUDSf1260uLCXNmB9QAABv/SURBVKpjoMBTzEortBxqxZVqozkxiu8KN1Fu8lCtNG6PF+3SeF0a7WrEemgjzyx6l9qjTEACu1aRuf+z+6kfUQ+Ax+vB6XHi8DhwuJpwuppocTbhdDXS6Gig3tVAvdtOg8eJHU+771ecx0MKRrLMcRwV3RdHlYEFHyxl2ZIdpMWkc+NfZzL11o4/E3l5eR0e0G9vyq+r02QCjH36AOCuqAhqu/4Y4Z8NHK+1vqL1/kXABK319bts8wnwN631N633vwBu1Vqv2Ne+ZYS//4K+6sZp56RJQ7DG1GDLisSYasGZFEFNnIXSSBMNRt+8ttGjiXRCrEOT0ewhxWUg0WMk3msiXpuI0xZisBCFhQjMRGgTFq8Bi9eA2WvE5FV8//1inHYHRhQmpTChfLdRGLXvthGF2WDEFpeAs7kFd7ML5VEoDyg6+a1i0ugIL95IjTdC44704ooEh1XTEq1pjtY0xWgaozUNFkUTCrtWNOP7UtZoiIykvL4OBxqXQeEyKNwGhctgwGNUeExG3y+fTiitiQAsXk2E9mLREKE1Fq2J8XqJ9XqJ82rijBHEmaKJi7Jhi04jJT6b5KQhJKeMJDJpMFisB/xPu6+1+z15dd/BwF1Tw0+TDif1zjuwXXyxX/cd6BF+CdB/l/v9gB0HsI3wg4CtutEaagpxbV/Gz9sWsblkHUXl5VQ1OBk1KQ5rS5xvZLwFEldrEho11mYvFpcHi9sXyr9SgAbcrV/tc7V+/SJbR+LSEbutLnFqL/bWVScuNF5zBCkDhlCozVR6NY74WOymSJq0pqGphtracgzeJk4/4w8ce9JJGGJiMMVHY7RaMJgBVzO47K3ffV+LvvyMT//1Bvb6KqxmRZQJrGZFnBlSzQpr631bXBTHHJFLhd1F4datKLwYFBgVmI0GMjLSiY+N5OeCrbQ4XLi84PKAy6txecBoieTwI34LZisqIg4VGQsRsWCJ8X2PiIPoPhCTCjEpYE0CQ+CuSNXRZykrKytgbYYLY0ICmM1BH+H7I/CXAYOVUjnAduA84II9tvkQuE4p9Sa+6Z66zubvxYHx16ob7WjCs/YL6pf+h4JNq6jaWYW7BiIbDCQ1wGA3DAZ8C7N8o716palyurAbjVgPGYYnKpIPv/mWeqcDu1dj93rxmE1ceMUV/HbKFN8qE7MZZTZD63ffl8X33dJ622JGmUzkDBiwRwApzH0yicoahaXfb4jOGgVRcb6HmutoKlxNS9EaHMVrcVUV7/b63i7YyJyhQ7o03fDboSfw2+lPdHryklIteF9cQDLwWTsHwoe3trW4w7nuJzmyB01/+OuzJPamlMLUpw/u8uAGPlrrbn/hW32zGfgZyGv92XRgeuttBTzT+vgaYHxX9jtu3Dgt9t+8efN0VlaWVkrprKwsPW/evE6f4yrdqevfeEqX3nCmXnPiKP3DmKF6/dBD2r5WjDxELzxmpF54wTH6uzum6Z/m/EPXLlyom9et067KSu11ufzWl468+to8HZs5TMeOO0Unn3an7nd9vs667WOdddvHetJDn+sb3vxBv7Fkm95a0aiVUhrfb6IOv7Kysvar/Xnz5mmr1eqX/fnzfQmkg6WfB6OtZ5+jt13+J7/vF1iuO8hUOdM2TOy59PLhvDxOSrVh//x96leuwVPpK1nrVVDSB7amK1z9k7ANH8uAsccycvgxxEbEBrXPbo+XdTvq25ZJLiv8tVSwu7YUU3UBZx41mhsuOJl+ibuXCu5sNA4HdlwjPz+fGTNmUFVVtdvPZTWK2F/F116Hq7iYAR9+4Nf9SmmFMPfLcrlkl4tTEuM4NSmWdG8ECoXTrFnfX7E2y0BZppXMcZOZNPQ4JqZPJNYSu9s+Ar36wuXx+ipJtgb8im2/lgrO6RPdWmjMRm5OEn07KRXc3hLBPXVnfXhvLuwlgmPnvffR8NlnDPn+O7/uV0orhDFncTE/3X8v/+6fRjK+NdalfTT/GmLgxxwD7oFpHDv4FKZm/55htmHtXlDD37XU28Jy+w4yx/yW319wNS2x/VmxrYZml2+J4eCUGE4d0/eASwXvukRw27ZtKKV2W1nS3bnoqVOnSsCLbjElJ+OpqUG7XL7jWEEgI/xeyNvcTP2Cf1P31jzsP25AoynL8LLwEBPfDTVQ5XJS/l0d9cvrsRfaO71qkr/OoGxxeXh07js8+ea/MaYNxdJ3KAazryRwWqSHE8YOJDfHxmEBKBUsI3LR09S89Tal997LoK++bLsoij/IlE6YcO3cSc2816h58w28TS00x3v5aqSBD0cbqYrwUrO4jupFNTRvaQa6HtgHura/ydFaKrj1Un2/lArWXg/O8gIcxWt9q2hK1tE/NUlOvxdhpeG//6XkmmvJ/te/iBo5wm/7lSmdXs7x009UPv0kdZ99DlqzfaCXlyeY+DHLTH/Vl4mGsTz956dpqm1qe87+TGl0dW1/Q4uL5YU1LG6dg1+7fZdSwRnxXHZENg/++RJaitehnbvPrRcVNSFEODElJwPBPdtWAv8g5vjpJypmPU7DF/9DGzUrD/Xy0kQLldGamu/rqJpbxebSn5g69xKef/r5A57S6Gg99l0PPMTC9WVtl+tbt+PXUsGjOygV/Pw15Wxz7n0gVcpoiHAjgS+6xFVWRsXDM6n7z0K0SfPdYfDSJBONbjdlC8up/qoaT8Ov9VXy8vIoLCw84DnrtgOg9z9EhUogefgk0kYfxcwNRvT65VhMBg7tn8B1vxvMxBwbh+5RKnhXcjKPED4mmw0AT3VVJ1v6sc2gtSS6zdvSQtXsp6ia+wpej5tvx8Pcw00Yo2LY/NpP1CyqQbv2nmvvqLhZZ8obWtrKBC8t7wdnPEIyEGk2MLBfIhfk+FbQjO6fQKS5a6f4S4EtIXyUxYIhNhZ3VXXQ2pTAPwjk5+fzyb13caPFRIzXxIZBmqenmChzu6j/qI6yLzfjanF1+PyuTpfsrGtuC/glW6vZWumbV4+2GBmXbePUMRlMHGBjZEYCFtOB1WUHWdIoxC9MNhueagl80erNOXOImPVX7jZFU52gue8EA+viPWx/dzu139b6agLvg8Vi6XC6pLjazpKC6rY5+KJq3zRLbKSJw7JtnHtYf3IHJDGibxwm44EHvBCifcakJNwS+AKg/u2XGPH04yht5Z0jFPPHQvG/y6laWIV2dr6cNikpiVmzZjF16lS01myrsu9yNadqttf6lmcmWM1MyLZxyeHZ5ObYGJYeh9HQhQL1QohuMSXZcBbuuwSIX9sLWkuiy7x1Vey84ULqvy+kONXAsycaWPFjNeW3VeBpav9iF3vKysri86VrWLy1mj+/8QNLCqooq/fVy0mKtpA7wNa6isbGkJRYDBLwQgSd0ZaEe+UPQWtPAj8I9ucsT8fnr7DlnocxVMP8SYq3+3vZMGsLztK9r4W6O1+p4MjMkURnjyZ6WC6/f+JrAFJiI9pKFEwcYGNgckynZ9cKIQLPlGTzlVfweFDGwF3boK29gLcQ5rpch6aljp0zL6Jy/mYaLYp5F8ZxyoUPkPlNBVfVX4WTPQJfGTAnZxOZOQJr1mgi+g33XTADiDd7+d2I/q3FxpLITrJKwAvRAxkTbeD14qmra1umGUgS+AHWlWvM6p++ZMXd1xK9SrMpy0Dpzefy6DG3YDVbIdtXwiDvrrspdZhJG3kkKSOOoFzHtl2+zmbxcOzIrLZRfH/bgV/WTggRPKak1rX4VVUS+L1BR2vgi4qKwNVM9Qe3sGLOQvoVGfh+UhwTH36Bs1JH4XR7WbHNd3B1iWMwMRc/R1prqeCYPtEc21omeEKOrdNSwUKInsloSwLAXVVNxODAtyeBH2Ad1aE5pI+RN27KJm2FjbRaA+svP4qhZ9zP52sbmPnRYlZuq92tVPBph/Ylt/VEp5T9LBUshOiZ2kb4NcFZmimBH2DtlRI4d7SZSSf3Jfs/URjdcOuoI/mp5o+4X1yBUjA0Nda3Bj7HxoQcG0l+LhUshOgZjEm/jvCDQQI/wNpKCdz7APXKyp0ne9gZ5+DIDwzYTRZuOWI6Pzc5iNjwX1546DYOy04kwWoJca+FEMFgjI8HgyFo9XQk8AOkvsXF8sJq30lOtdlknJPHDYmPsbHKzTXvGthutjC91kTxS39BO30XIZny/hOh7rYQIoiU0YgxIQF3pQT+QaXW7mRpQetB1oIq1u+obysVfEZKIUP7PcmGbUb+/KHmR0czV2/cTN0uFw+R8sBChCejLRFPTU1Q2pLAP0BVjY62gF+8tYpNZQ1ozV6lglNLX+O2Dc+TvNnIjI81jf37c/133+0W9lIeWIjwZUxIwFNbG5S2JPC7aNdSwUu2VvNTeSMAUWYj47ISOXlkOrkDkhjVL95XKtjr4esPr+Ci6qVM3Gziik+8RI8fzyHPz2bW/PlSHlgIAYAxPgHXAZYw318S+B3YUdvcdi3WPUsFj8+2cfrYDHJzkhiZEb9XqWDttPPy26fyd/dOzt4cxVmfNGMdfxj9Zz+HwWqV8sBCiDbGhHha1tQFpS0JfEBrTUlNM4tbywQvKaiiuNpXSTI20sSEbBvnTehPbk4Sv+mkVLCrsYwH/vVH3jc0c8WOdI77aCfWcePawl4IIXb1y5SO1jrgJVDCMvC11hRW2dvqwC/ZWsWOuhbg11LBlx6es9+lgmtKV3PDJxex0qS53T6GcW+tIWLYMPo9J2EvhGifMSEB7XSim5tRAc6JbgW+UsoGvAVkA4XAOVrrvQ43K6UKgQbAA7i11uO70+7+0lrzc0Uji1vrwC/ZWkV5g69UcJ8YC7k5SUxvLVUwOCXmgEoFb9v6BdO/mkG5Ef4RdRr9nvoUU0YG/V+YgzEm2t8vSQjRSxgTEgDw1NYGfGDY3RH+7cAXWuuHlVK3t96/rYNtj9FaV3azvS7xejWbyhpYsrWKpYXVLC2oprLRV20yNS6CiQOSyG0N+IHJ0d3+M2rthve4ZvE9oGBu5o1E3TUXFRdL5ksvYkpM9MdLEkL0UrsGvrlv34C21d3APxWY3Hr7FeArOg78oGhxeTji4f9S1eQL+IyEKI4anNwW8Fl+LhX87aq53PjDE9i04rlxD+O58Qm8QOZLL2FOT/dbO0KI3sm0S+AHvK1uPj9Va70TQGu9UymV0sF2GvhMKaWB57XWczraoVJqGjANDuxkpEizkakTs8i0WQNeKvjjxY9z98Z/MlArnj12Lk23PIa7poasV18lIicnYO0KIXoPY08KfKXU50BaOw/l7Uc7R2itd7T+QliolNqotf66vQ1bfxnMARg/fnznF25tx01ThhzI0/bL64vu529b3+Ewj5F/nPoO9Q8+Q8uaNfR76kmiRo4IePtCiN7BEB8PgKcu8EszOw18rfXvO3pMKVWmlEpvHd2nA+Ud7GNH6/dypdR8YALQbuAfDF5edC+Pb32PY9wmHjt7AbUvvEHDp5+ScuutxP6+w7dLCCH2EswpnY4XlHfNh8AlrbcvAT7YcwOlVLRSKvaX28BxwNputhsyz399D49vfY8TXEYeP3sB9oXfUfXCCyScey62yy4NdfeEEAcZZbFgsFoPisB/GJiilPoJmNJ6H6VUX6XUgtZtUoFvlFKrgaXAJ1rr/3Sz3aDTWvPk13k8XTCfU5yKh8/+GOe6Qnbeex/RRxxB2l15ct1YIcQBCVY9nW4dtNVaVwHHtvPzHcBJrbe3AqO7006oaa35x6K7mFvwIWe2wD3nfISr0kHJn2cQkZNNxj/+jjKbQ91NIcRBypiQgLunB364eG7Jw8wt+JBzmz3cefaHeHUsxVedi7JY6PfcbIyxsaHuohDiIHZQjPDDwUsrn+a5Ta9zmt3JnWe8BzH9Kbn0MtwVFWS9+gqWfhmh7qIQ4iBnTEjAub0k4O1I4O9D/pp/8o81z3NiUzP3nfQyKnkYO/5yC80//EDGP/5B1OiDeqZKCNFD+Eb4gV+W2d2Dtr3WOxvf5uGVT3BsUzMzj36MN7/dxj1DhlC/YAFzXS4+qgpKlQghRBgwJsTjra9HezwBbUdG+O34vHAhDyx5kCPtzTwy7hbeXtXEBzfcyP1JSbxTW8tjZaVYp00DkLr2QohuMyYkgNZ46usDWn9LRvh7WFa6jNu+voVRLQ6eGDQVS+5VvHX33dxls7G4qYkHy0oBsNvt5OXtz8nGQgjRvmCVV5DA38Xmms3M+Pwa+jlaeDrhMKKOvRfHzz+TZzSxzelkxo7tuHbZvihIlyUTQvRuEvhBtqNxB1d/egVRTjuzvX1IOP0F3NXVFE+7CrfBwPSSEhp2ufA4HFhxNyGE2JMEfhDVOeq46tMraG6uYXa9h/Tz38brURRfcy3uqirKr/gTtZbdT6yyWq3MnDkzRD0WQvQmvwZ+YFfqhH3guzwubvxyBtsbinmqopbBZ7+Otqaw49ZbaVmzhozHHuX0W25hzpw5ZGVloZQiKyuLOXPmyAFbIYRfBGuEH9ardLTWPLj4QZaVreChikrGnfwsOn0MO++6m4aFn5N65x1t1S+nTp0qAS+ECAhDTAwohbehPrDtBHTvPdzL615m/pb5TKup449jpqGHn0b5/z1C3Xvv0eeaa7BdfHGouyiECAPKYMAQG4unviGg7YRt4H9R9AV/X/F3jre3cG3iKPjd3VQ++yzVr7xC4oUX0uf660LdRSFEGDHGxsoIPxA2Vm/kjq9vZ4Rb89dmM+qMuZQ//QyVTz1N/KmnknrnHVLqWAgRVIa4uICP8MNuDr+mpYYZ/51BnMfNkzvLiLjkE8qfnkv1K68Qf9aZpN9/P8oQlr8HhRAhZIyNxRPgEX5YBb7b6+bWr2+loqmUV7bvwDb5QXb8/U3qFywg8aKLSL3jdgl7IURIGOJicRUVB7SNsAr8J394ksU7F/NAZQ1Dk6aw7YmFtGzYQPJNN5F05RUyjSOECBljbBwtDXLQ9oDk5+eTnZ2NwWAgOzubu167i3+u/SfnNnk5ekMiW5/bgLO4mH7PPkOfaVdK2AshQsoYF4u3XqZ09tui8y9gwRefU1FZhdaaUncpX1S+x8VbjJy22EVZk5HoIyeS/tcHMaelhbq7QgiBITYOb1MT2u1GmQITzb0u8D2NTdStWMFdtiTuSLRR6nETFWvC9rwG3Jiy0kh77H5iJk+WUb0QoscwxvkuleptbGw789bfel3gG2OiOWXLTxwaGcnh1miG/CYeY7KBXHMjtY56fvevtSijMdTdFEKI3Rhi4wDwNDQELPB75Rx+ZmYmK5ubyf+NhzmXR1E5pp6MjBpuWx8nYS+E6JF+GeF7AjiP3ysDf+bMmcQPiif9wnTSdtrJczdw9X80N979t1B3TQgh2mWIbZ3SCeBKnV4Z+Kefczqj7xqN2QWvO6t4a5OFs+54XoqfCSF6LGNc65ROAEf4vW4OX2vNXxf/lVpVywteA8nxWVzw8rcQERPqrgkhRIeMPX2Er5Q6Wym1TinlVUqN38d2JyilNimltiilbu9Om52pd9azumI10yOzmFBZDKfNlrAXQvR4hrYRfg8NfGAtcAbwdUcbKKWMwDPAicBw4Hyl1PButtuh+Ih43h52FdPW/w+O+DNkTQpUU0II4TeG6OiA18Tv1pSO1noD0Nl69gnAFq311tZt3wROBdZ3p+0ONdcQ/clfIGU4HJMXkCaEEMLfglETPxhz+BnArhWBSoDcjjZWSk0DpsEBXiQ8Ih5+ezNkTgJTxP4/XwghQsQYG4unPnDXte008JVSnwPt1R/I01p/0IU22hv+64421lrPAeYAjB8/vsPtOmQwQO5V+/00IYQINUNcHN5QjvC11r/vZhslQP9d7vcDdnRzn0II0ev4auL33IO2XbEMGKyUylFKWYDzgA+D0K4QQhxUDAGumNndZZmnK6VKgEnAJ0qpT1t/3lcptQBAa+0GrgM+BTYAb2ut13Wv20II0fsYY+MCOsLv7iqd+cD8dn6+Azhpl/sLgAXdaUsIIXq7QNfE75WlFYQQ4mBkiI3Da7ej3e7A7D8gexVCCLHf2ipmBmhaRwJfCCF6iF9q4geqno4EvhBC9BC/1sSXwBdCiF7t15r4gTlwK4EvhBA9hDHAFTMl8IUQoocwxPhKuXsbGwOz/4DsVQghxH4zREcD4G2SwBdCiF7N2DrCl2WZQgjRyymzGRUZibexKSD7l8AXQogexBAbI3P4QggRDozRMXgaZUpHCCF6PUNsrEzpCCFEODDEREtpBSGECAfGmBhZlimEEOHAEBOLpyEwgd+tC6AIIYTwr6gxY1AmY0D2LYEvhBA9SOK558C55wRk3zKlI4QQYUICXwghwoQEvhBChAkJfCGECBMS+EIIESYk8IUQIkxI4AshRJiQwBdCiDChtNah7kOHlFIVwLYDfHofoNKP3elt5P3pnLxH+ybvT+dC8R5laa2T23ugRwd+dyillmutx4e6Hz2VvD+dk/do3+T96VxPe49kSkcIIcKEBL4QQoSJ3hz4c0LdgR5O3p/OyXu0b/L+dK5HvUe9dg5fCCHE7nrzCF8IIcQuJPCFECJM9JrAV0qdrZRap5TyKqU6XAallDpBKbVJKbVFKXV7MPsYSkopm1JqoVLqp9bviR1sV6iUWqOUWqWUWh7sfgZbZ58H5fNk6+M/KqXGhqKfodSF92iyUqqu9TOzSil1Tyj6GSpKqblKqXKl1NoOHu8xn6FeE/jAWuAM4OuONlBKGYFngBOB4cD5SqnhweleyN0OfKG1Hgx80Xq/I8dorcf0pPXDgdDFz8OJwODWr2nAc0HtZIjtx/+ZRa2fmTFa6weC2snQexk4YR+P95jPUK8JfK31Bq31pk42mwBs0Vpv1Vo7gTeBUwPfux7hVOCV1tuvAKeFsC89RVc+D6cCr2qfxUCCUio92B0NoXD+P9MlWuuvgep9bNJjPkO9JvC7KAMo3uV+SevPwkGq1nonQOv3lA6208BnSqkVSqlpQetdaHTl8xDOnxno+uufpJRarZT6t1LqN8Hp2kGjx3yGDqqLmCulPgfS2nkoT2v9QVd20c7Pes261H29P/uxmyO01juUUinAQqXUxtYRTG/Ulc9Dr/7MdEFXXv9KfPVbGpVSJwHv45u+ED495jN0UAW+1vr33dxFCdB/l/v9gB3d3GePsa/3RylVppRK11rvbP1zsryDfexo/V6ulJqP70/63hr4Xfk89OrPTBd0+vq11vW73F6glHpWKdVHay2F1Xx6zGco3KZ0lgGDlVI5SikLcB7wYYj7FCwfApe03r4E2OsvIqVUtFIq9pfbwHH4Dob3Vl35PHwIXNy60mIiUPfL1FiY6PQ9UkqlKaVU6+0J+HKlKug97bl6zGfooBrh74tS6nTgKSAZ+EQptUprfbxSqi/wotb6JK21Wyl1HfApYATmaq3XhbDbwfQw8LZS6k9AEXA2wK7vD5AKzG/9v2sCXtda/ydE/Q24jj4PSqnprY/PBhYAJwFbADtwWaj6GwpdfI/OAq5WSrmBZuA8HUan8Cul3gAmA32UUiXAvYAZet5nSEorCCFEmAi3KR0hhAhbEvhCCBEmJPCFECJMSOALIUSYkMAXQogwIYEvhBBhQgJfCCHCxP8DJXjeo6oUaKkAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot data again\n",
    "plt.scatter(X.ravel(), y, color='black')\n",
    "\n",
    "# Get data for curves\n",
    "X_test = np.linspace(-1, 1.1, 500)[:, None]\n",
    "\n",
    "# Plot several fits\n",
    "axis = plt.axis()\n",
    "for degree in [1, 3, 5, 9]:\n",
    "    y_test = PolynomialRegression(degree).fit(X, y).predict(X_test)\n",
    "    plt.plot(X_test.ravel(), y_test, label='degree={0}'.format(degree))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.11"
  },
  "toc-autonumbering": true
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
